##
## JDBC
##
    #
    # MySQL
    #
    jdbc.default.driverClassName=com.mysql.cj.jdbc.Driver
    jdbc.default.url=jdbc:mysql://mysql8:3306/lportal?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&serverTimezone=GMT&useFastDateParsing=false&useUnicode=true
    jdbc.default.username=liferay
    jdbc.default.password=liferay


##
## Web Server
##
    #
    # Set this to true to display the server name at the bottom of every page.
    # This is useful when testing clustering configurations so that you can know
    # which node you are accessing.
    #
    web.server.display.node=true

##
## Setup Wizard
##
    #
    # Set this property to true if the Setup Wizard should be displayed the
    # first time the portal is started.
    #
    setup.wizard.enabled=false

##
## Module Framework
##
    #
    # Pass arbitrary extra properties to the framework using the prefix:
    # "module.framework.properties." to avoid avoid colliding with other
    # frameworks that may be running within the same JVM.
    #
    module.framework.properties.osgi.console=0.0.0.0:11311

##
## Document Library Service
##
  #
  # Set the name of a class that implements
  # com.liferay.document.library.kernel.store.Store. The
  # document library server will use this to persist documents.
  #
  dl.store.impl=com.liferay.portal.store.file.system.AdvancedFileSystemStore

##
## Cluster Link
##

  #
  # Set this to true to enable the cluster link. This is required if you want
  # to cluster indexing and other features that depend on the cluster link.
  #
  cluster.link.enabled=true

  #
  # Set the JGroups properties for each channel, we support up to 10 transport
  # channels and 1 single required control channel. Use as few transport
  # channels as possible for best performance. By default, only one UDP
  # control channel and one UDP transport channel are enabled. Channels can be
  # configured by XML files that are located in the class path or by inline
  # properties.
  #
  #cluster.link.channel.properties.control=jdbc_ping.xml
  #cluster.link.channel.properties.transport.0=jdbc_ping.xml

  #
  # Set this property to autodetect the default outgoing IP address so that
  # JGroups can bind to it. The property must point to an address that is
  # accessible to the portal server, www.google.com, or your local gateway.
  #
  cluster.link.autodetect.address=mysql8:3306

##
## HTTP Tunneling
##

    #
    # Set this to the appropriate encryption algorithm that will be used for
    # tunnel level encryption algorithms.
    #
    # If you change this setting, you may need to also change the property
    # "tunneling.servlet.shared.secret" to make sure that the shared secret
    # length is a valid length for the encryption algorithm.
    #
    # For more details about encryption keys, see the Java Cryptography
    # Extension documentation.
    #
    #tunneling.servlet.encryption.algorithm=AES
    #tunneling.servlet.encryption.algorithm=Blowfish
    #tunneling.servlet.encryption.algorithm=DESede

    #
    # Set this shared secret to secure communications from one portal to another
    # via the tunneling servlet. This portal will refuse communications from
    # other portals that do not share the same secret.
    #
    # Secrets must be at least 8 bytes long. Please note that using a secret
    # that is larger than 16 bytes requires that the Java Cryptography Extension
    # Unlimited Strength Jurisdiction Policy Files are installed and that the
    # property "tunneling.servlet.encryption.algorithm" supports that particular
    # key size.
    #
    # For more details about supported key sizes for encryption keys, see
    # the Java Cryptography Extension documentation.
    #
    #tunneling.servlet.shared.secret=F0E1D2C3B4A5968778695A4B3C2D1E0F

    #
    # When set to true, tunneling.servlet.shared.secret must be encoded using
    # a hexadecimal encoding.
    #
    #tunneling.servlet.shared.secret.hex=true

##
## Tunnel Servlet
##

    #
    # See the properties "main.servlet.hosts.allowed" and
    # "main.servlet.https.required" on how to protect this servlet.
    #
    #tunnel.servlet.hosts.allowed=


